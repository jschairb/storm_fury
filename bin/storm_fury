#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'storm_fury'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/storm_fury` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/storm_fury now"
  exit 64
end

include GLI::App

program_desc 'Rapidly deploy storm environments'

version StormFury::VERSION

pre do |global,command,options,args|
  # TODO: refactor to a Pre-Validation
  if !File.exists?(File.expand_path("~/.fog"))
    fail "Please create credentials for fog at ~/.fog"
  end
  true
end

desc 'Manage servers IN THE CLOUD, WITH FURY'
command :servers do |servers|
  servers.desc "Create a server IN THE CLOUD"
  servers.arg_name "name"
  servers.command :create do |create|
    create.desc "The domain for this server"
    create.default_value StormFury.default_domain
    create.flag [:d, :domain]

    create.desc "The flavor id"
    create.default_value StormFury.default_flavor_id
    create.flag [:f, :flavor_id]

    create.desc "The image id"
    create.default_value StormFury.default_image_id
    create.flag [:i, :image_id]

    create.desc "The name of the keypair"
    create.default_value StormFury.default_keypair
    create.flag [:k, :keypair]

    create.desc "The path of the key representing the keypair"
    create.default_value StormFury.default_keypair_path
    create.flag [:p, :keypath]

    create.action do |global_options, options, args|
      StormFury::CLI::Servers.create(global_options, options, args)
    end
  end
end

desc "Manage keypairs IN THE CLOUD, WITH FURY"
command :keypairs do |c|
  c.desc "Create a keypair IN THE CLOUD"
  c.arg_name "name"
  c.command :create do |create|
    create.desc 'The path to the key file'
    create.default_value StormFury.default_keypair_path
    create.arg_name 'path-to-key'
    create.flag [:p, :path]

    create.action do |global_options, options, args|
      StormFury::CLI.Keypairs.create(global_options, options, args)
    end
  end
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  message = "[FAILURE] #{exception.message}"
  puts message
  false # required to skip default error handling
end

exit run(ARGV)
